<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">
	<!-- Spring ApplicationContext 및 Dispatcher Servlet 설정 -->
	<!-- 웹 에플리케이션 설정 파일 -->
	<!-- encoding configuration -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>

	<!-- Spring 설정 위한 ApplicationContext 생성 -->
	<!-- ApplicationContext : 스프링이 관리하는 빈들이 담겨 있는 컨테이너 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:META-INF/spring/context-*.xml</param-value> <!-- Spring 설정파일 위치 -->
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> <!-- ContextLoaderListener 활용 -->
	</listener>

	<!-- Spring MVC 설정 위한 WebApplicationContext 생성 -->
	<!-- Dispatcher Servlet : Spring Container(Controller의 lifecycle 관리) 생성하여 
		클라이언트의 요청을 Controller에 보낸다 -->
	<servlet>
		<servlet-name>mvcAction</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> <!-- Dispatcher Servlet 설정 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/config/springmvc/context-*.xml</param-value> <!-- Spring 웹 설정파일 위치 -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>mvcAction</servlet-name>
		<url-pattern>*.do</url-pattern> <!-- *.do 형태 요청은 Dispatcher Servlet으로 보내어 처리 -->
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>mvcAction</servlet-name>
		<url-pattern>*.ajax</url-pattern>
	</servlet-mapping>

</web-app>